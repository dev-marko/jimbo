// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkoutPlans.Context;

namespace WorkoutPlans.Migrations
{
    [DbContext(typeof(WorkoutPlansContext))]
    [Migration("20220909104320_ChangedProperties")]
    partial class ChangedProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WorkoutPlans.Domain.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MuscleGroup")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("WorkoutPlans.Domain.Models.TrainingProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("WorkoutPlans.Domain.Relations.TrainingProgramWeek", b =>
                {
                    b.Property<Guid>("TrainingProgramId")
                        .HasColumnType("uuid");

                    b.Property<string>("WeekName")
                        .HasColumnType("text");

                    b.HasKey("TrainingProgramId", "WeekName");

                    b.ToTable("TrainingProgramWeeks");
                });

            modelBuilder.Entity("WorkoutPlans.Domain.Relations.WorkoutSessionForExercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<string>("SessionName")
                        .HasColumnType("text");

                    b.Property<string>("WeekName")
                        .HasColumnType("text");

                    b.Property<Guid>("TrainingProgramId")
                        .HasColumnType("uuid");

                    b.Property<string>("Reps")
                        .HasColumnType("text");

                    b.Property<string>("RestTime")
                        .HasColumnType("text");

                    b.Property<string>("Sets")
                        .HasColumnType("text");

                    b.HasKey("ExerciseId", "SessionName", "WeekName", "TrainingProgramId");

                    b.HasIndex("TrainingProgramId", "WeekName");

                    b.ToTable("WorkoutSessionsForExercises");
                });

            modelBuilder.Entity("WorkoutPlans.Domain.Relations.TrainingProgramWeek", b =>
                {
                    b.HasOne("WorkoutPlans.Domain.Models.TrainingProgram", "TrainingProgram")
                        .WithMany("Weeks")
                        .HasForeignKey("TrainingProgramId")
                        .HasConstraintName("FK_TrainingProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutPlans.Domain.Relations.WorkoutSessionForExercise", b =>
                {
                    b.HasOne("WorkoutPlans.Domain.Models.Exercise", "Exercise")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("ExerciseId")
                        .HasConstraintName("FK_ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutPlans.Domain.Relations.TrainingProgramWeek", "TrainingProgramWeek")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("TrainingProgramId", "WeekName")
                        .HasConstraintName("FK_TrainingProgramWeek")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
